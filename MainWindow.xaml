<Window x:Class="Beatbox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Beatbox"
        mc:Ignorable="d"
        Title="Beatbox - The Ultimate Damage-Dealer"
        Height="350" Width="800"
        MinHeight="350" MinWidth="800"
        x:Name="MainFrame" ContentRendered="Window_ContentRendered" ResizeMode="CanResize">

    <Window.Resources>
        <!--#region ViewBox templates -->
        <DataTemplate x:Key="MilestoneTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Content="{Binding Path=Name}"
                                           Grid.Row="0" Grid.Column="0"
                                           FontWeight="Bold"
                                           Background="DeepSkyBlue"/>
                <TextBlock Text="{Binding Path=Description}"
                                                   FontStyle="Italic"
                                                   Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   MaxWidth="{Binding ElementName=log, Path=ActualWidth}"
                                                   Background="LightBlue"/>
                <Label Content="{Binding Path=DateTime}"
                                           Grid.Row="2" Grid.Column="2"
                                           HorizontalContentAlignment="Right"
                                           Background="DeepSkyBlue"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="StringTemplate">
            <TextBlock Text="{Binding}"
                       Margin="5,5,5,5" HorizontalAlignment="Left"/>
        </DataTemplate>

        <DataTemplate x:Key="TextBlockTemplate">
            <TextBlock Text="{Binding Path=Text}"
                       Margin="5,5,5,5" HorizontalAlignment="Left"/>
        </DataTemplate>

        <DataTemplate x:Key="ImageTemplate">
            <Image Source="{Binding Path=Source}"
                   Stretch="Uniform" HorizontalAlignment="Center"
                   MaxHeight="200" Margin="5,5,5,5"/>
        </DataTemplate>

        <local:LogTemplateSelector x:Key="logTemplateSelector"/>
        <!--#endregion-->

        <!--#region  Placeholder definition -->
        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Gray">
                                    Placeholder
                                </TextBlock>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#region -->
    </Window.Resources>
    
    <DockPanel x:Name="ContentFrame">
        <!-- Menu bar -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="_New" Click="Menu_New_Click" />
                <MenuItem Header="_Load" Click="Menu_Load_Click" />
                <MenuItem Header="_Save" Click="Menu_Save_Click" />
                <Separator />
                <MenuItem Header="_Exit" Click="Menu_Exit_Click" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Reset Points" Click="Menu_Reset_Click" />
            </MenuItem>
            <MenuItem Header="Info" Click="Menu_Info_Click"/>
            <MenuItem Header="Milestones" Click="Menu_Milestones_Click"/>
        </Menu>
        <!-- Shows information when leveled up or points available -->

        <Grid DockPanel.Dock="Bottom" x:Name="StatusBar">
            <ProgressBar x:Name="XPBar" Height="20" Minimum="0" Maximum="100"/>
            <TextBlock Text="{Binding ElementName=XPBar, Path=Value, StringFormat=Current Progress: {0:0}%}"
                       HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock.RenderTransform>
                    <ScaleTransform x:Name="XPBarScale"/>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>

        <!-- Main part of the frame -->

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.25*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="0.25*" />
            </Grid.ColumnDefinitions>
            <!-- left column -->
            <Viewbox Grid.Column="0" VerticalAlignment="Center" Stretch="Uniform">
                <Grid x:Name="InfoGrid" Margin="10,10,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.2*"/>
                        <ColumnDefinition Width="0.3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- fill in as many lines as needed -->
                        <RowDefinition/>
                        <RowDefinition Height="5"/>
                        <RowDefinition/>
                        <RowDefinition Height="5"/>
                        <RowDefinition/>
                        <RowDefinition Height="5"/>
                        <RowDefinition/>
                        <RowDefinition Height="20"/>
                        <!-- index 8 -->
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- left, labels -->
                    <Label Content="Level:" FontWeight="Bold" Grid.Column="0" Grid.Row="1"/>
                    <Label Content="Attack Power:" Grid.Column="0" Grid.Row="3"/>
                    <Label Content="Critical Rating:" Grid.Column="0" Grid.Row="5"/>
                    <Label Content="Haste Rating:" Grid.Column="0" Grid.Row="7"/>
                    <Label Content="Damage:" Grid.Column="0" Grid.Row="9"/>
                    <Label Content="Crit Chance (%):" Grid.Column="0" Grid.Row="10"/>
                    <Label Content="Attack Rate (sec):" Grid.Column="0" Grid.Row="11"/>
                    <Label Content="Damage/sec:" Grid.Column="0" Grid.Row="12"/>
                    <Label Content="Record:" Grid.Column="0" Grid.Row="13"/>

                    <!-- center, values -->
                    <Label x:Name="ValueAP" Content="1" Grid.Column="1" Grid.Row="3" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueCR" Content="1" Grid.Column="1" Grid.Row="5" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueHR" Content="1" Grid.Column="1" Grid.Row="7" HorizontalContentAlignment="Right"/>
                    <!-- right, buttons -->
                    <Button x:Name="IncrBttnAP" Grid.Column="2" Grid.Row="3" Click="IncreaseAP">
                        <TextBlock Margin="2,0,2,0">Increase</TextBlock>
                    </Button>
                    <Button x:Name="IncrBttnCR" Grid.Column="2" Grid.Row="5" Click="IncreaseCR">
                        <TextBlock Margin="2,0,2,0">Increase</TextBlock>
                    </Button>
                    <Button x:Name="IncrBttnHR" Grid.Column="2" Grid.Row="7" Click="IncreaseHR">
                        <TextBlock Margin="2,0,2,0">Increase</TextBlock>
                    </Button>
                    <Label x:Name="LevelValue" Content="1" FontWeight="Bold" Grid.Column="2" Grid.Row="1" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueCurrentDamage" Content="0" Grid.Column="2" Grid.Row="9" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueCritChance" Content="0" Grid.Column="2" Grid.Row="10" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueAttackRate" Content="0" Grid.Column="2" Grid.Row="11" HorizontalContentAlignment="Right"/>
                    <Label x:Name="DamagePerSecondValue" Content="0" Grid.Column="2" Grid.Row="12" HorizontalContentAlignment="Right"/>
                    <Label x:Name="ValueRecordDamage" Content="0" Grid.Column="2" Grid.Row="13" HorizontalContentAlignment="Right"/>
                </Grid>
            </Viewbox>
            <!-- center column -->
            <Grid Grid.Column="1" Margin="10,10,10,0">
                <Grid>
                    <Grid.RenderTransform>
                        <RotateTransform/>
                    </Grid.RenderTransform>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.05*"/>
                        <RowDefinition/>
                        <RowDefinition Height="0.25*"/>
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Stretch" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0.3*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        
                        <Image x:Name="ArrowImage" Source="/res/arrow_down.png" Grid.Column="1" />
                        
                    </Grid>
                    <Viewbox x:Name="AnimationPanel" Grid.Row="1" VerticalAlignment="Bottom">
                        <Grid Margin="0,0,0,10">
                            <Image Source="/res/gradient_circle.png" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="0.35"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <Image x:Name="rotatingArrow" Stretch="Uniform" Source="/res/arrow_up.png"
                               RenderTransformOrigin="0.5,13.6" Margin="0,0,0,520"
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" >
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Grid>
                    </Viewbox>
                    <Viewbox Grid.Row="1" Stretch="Uniform" Margin="75,75,75,75">
                        <TextBlock x:Name="ExplosionLabel"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           FontFamily="Yu Gothic UI"/>
                    </Viewbox>
                    <Viewbox Grid.Row="1" Stretch="Uniform" Margin="75,0,75,150">
                        <TextBlock x:Name="CritLabel"
                           VerticalAlignment="Top" HorizontalAlignment="Center"
                           FontFamily="Yu Gothic UI" FontStyle="Italic"/>
                    </Viewbox>

                    <Border Grid.Row="2"
                            BorderBrush="Gray" Background="#FFBCBCBC"
                            CornerRadius="10"
                            MouseLeftButtonDown="LeftMouseDown_Action">
                        
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
                            Left-Click on this area when the arrows meet
                            <LineBreak/>
                            to convert next hit into a critical strike.
                        </TextBlock>
                    </Border>
                    
                </Grid>
            </Grid>
            <!-- right column -->
            <Grid x:Name="LogGrid" Grid.Column="2" Margin="10,10,10,10" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.15*"/>
                    <RowDefinition/>
                    <RowDefinition Height="0.25*"/>
                </Grid.RowDefinitions>

                <Button x:Name="StartStopButton" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Click="StartStopButton_Click">
                    <Viewbox>
                        <TextBlock>Start</TextBlock>
                    </Viewbox>
                </Button>
                <ScrollViewer x:Name="ScrollViewer" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,10,0,10">
                    <ListBox x:Name="log"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:local="clr-namespace:Beatbox"
                         HorizontalContentAlignment="Stretch"
                         IsSynchronizedWithCurrentItem="True"
                             ItemTemplateSelector="{StaticResource logTemplateSelector}"
                             MaxWidth="{Binding ElementName=ScrollViewer, Path=ActualWidth}">
                        </ListBox>
                </ScrollViewer>

                <Viewbox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Damage:" Grid.Column="0" Grid.Row="0"/>
                        <Label Content="Next level at:" Grid.Column="0" Grid.Row="1"/>
                        <Label x:Name="ValueCurrentDamageDone" Content="0" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"/>
                        <Label x:Name="ValueNextLevelAt" Content="0" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right"/>

                    </Grid>
                </Viewbox>
            </Grid>
        </Grid>

    </DockPanel>
</Window>
